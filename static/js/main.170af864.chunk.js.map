{"version":3,"sources":["components/Tunnel/Tunnel.js","components/Component/Component.js","App.js","reportWebVitals.js","index.js"],"names":["Tunnel","tunnel__outer","useRef","useState","offset","offsetSet","contentPropsLT","useSpring","opacity","left","top","transform","contentPropsRT","useEffect","onScroll","e","offsetRaw","target","documentElement","scrollTop","current","offsetTop","window","innerHeight","clientHeight","addEventListener","removeEventListener","section","className","ref","div","style","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2RAsDeA,EAlDA,WACb,IAAMC,EAAgBC,iBAAO,MAE7B,EAA4BC,mBAAS,GAArC,mBAAOC,EAAP,KAAeC,EAAf,KACMC,EAAiBC,oBAAU,CAC/BC,QAASJ,EACTK,KAAK,GAAD,OAAK,GAAK,GAAKL,EAAf,KACJM,IAAI,GAAD,OAAK,GAAK,GAAKN,EAAf,KACHO,UAAU,aAAD,OAAqB,GAAKP,EAAV,GAAhB,cACD,GAAKA,EAAV,GADM,qBAEa,GAATA,EAFJ,UAILQ,EAAiBL,oBAAU,CAC/BC,QAASJ,EACTK,KAAK,GAAD,OAAK,GAAK,GAAKL,EAAf,KACJM,IAAI,GAAD,OAAK,GAAK,GAAKN,EAAf,KACHO,UAAU,aAAD,QAAgB,IAAMP,EAAtB,cAAwC,GAAKA,EAAV,GAAnC,sBACG,GAAVA,EADO,UAsBX,OAlBAS,qBAAU,WACR,IAAMC,EAAW,SAACC,GAChB,IAAMC,GACHD,EAAEE,OAAOC,gBAAgBC,UACxBlB,EAAcmB,QAAQC,UACtBC,OAAOC,cACRtB,EAAcmB,QAAQI,aAAe,KACpCR,EAAY,GAAGX,EAAU,GAEzBW,EAAY,GAAKA,GAAa,GAAGX,EAAUW,GAE3CA,EAAY,GAAGX,EAAU,IAI/B,OAFAiB,OAAOG,iBAAiB,SAAUX,GAE3B,kBAAMQ,OAAOI,oBAAoB,SAAUZ,MACjD,CAACV,IAGF,cAAC,WAAEuB,QAAH,CAAWC,UAAU,SAASC,IAAK5B,EAAnC,SACE,sBAAK2B,UAAU,iBAAf,UACE,cAAC,WAAEE,IAAH,CAAOC,MAAOzB,EAAgBsB,UAAU,oBACxC,cAAC,WAAEE,IAAH,CAAOC,MAAOnB,EAAgBgB,UAAU,0BCtCjCI,G,MAJG,WAChB,OAAO,cAAC,WAASL,QAAV,CAAkBC,UAAU,gBCStBK,MAVf,WACE,OACE,sBAAKL,UAAU,MAAf,UACE,cAAC,EAAD,IAEA,cAAC,EAAD,QCGSM,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.170af864.chunk.js","sourcesContent":["import React, { useState, useCallback, useEffect, useRef } from \"react\";\nimport \"./Tunnel.css\";\nimport { useSpring, animated as a, interpolate } from \"react-spring\";\nimport \"aos/dist/aos.css\";\nconst Tunnel = () => {\n  const tunnel__outer = useRef(null);\n\n  const [offset, offsetSet] = useState(0);\n  const contentPropsLT = useSpring({\n    opacity: offset,\n    left: `${50 - 50 * offset}%`,\n    top: `${50 - 50 * offset}%`,\n    transform: `translate(${-50 + 50 * offset}%, ${\n      -50 + 50 * offset\n    }%) rotate(${offset * 90}deg)`,\n  });\n  const contentPropsRT = useSpring({\n    opacity: offset,\n    left: `${50 + 50 * offset}%`,\n    top: `${50 - 50 * offset}%`,\n    transform: `translate(${-100 * offset}%, ${-50 + 50 * offset}%) rotate(${\n      offset * -90\n    }deg)`,\n  });\n  useEffect(() => {\n    const onScroll = (e) => {\n      const offsetRaw =\n        (e.target.documentElement.scrollTop -\n          tunnel__outer.current.offsetTop +\n          window.innerHeight) /\n        (tunnel__outer.current.clientHeight - 100);\n      if (offsetRaw < 0) offsetSet(0);\n\n      if (offsetRaw > 0 && offsetRaw <= 1) offsetSet(offsetRaw);\n\n      if (offsetRaw > 1) offsetSet(1);\n    };\n    window.addEventListener(\"scroll\", onScroll);\n\n    return () => window.removeEventListener(\"scroll\", onScroll);\n  }, [offset]);\n\n  return (\n    <a.section className=\"tunnel\" ref={tunnel__outer}>\n      <div className=\"tunnel__sticky\">\n        <a.div style={contentPropsLT} className=\"tunnel__box__lt\"></a.div>\n        <a.div style={contentPropsRT} className=\"tunnel__box__rt\"></a.div>\n        {/* <a.div style={contentPropsLB} className=\"tunnel__box__lb\"></a.div>\n        <a.div style={contentPropsRB} className=\"tunnel__box__rb\"></a.div> */}\n      </div>\n    </a.section>\n  );\n};\n\nexport default Tunnel;\n","import React, { useState, useCallback, useEffect } from \"react\";\nimport \"./Component.css\";\nimport { useSpring, animated, interpolate } from \"react-spring\";\nimport \"aos/dist/aos.css\";\nconst Component = () => {\n  return <animated.section className=\"component\"></animated.section>;\n};\n\nexport default Component;\n","import \"./App.css\";\nimport Tunnel from \"./components/Tunnel/Tunnel\";\nimport Component from \"./components/Component/Component\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Component />\n\n      <Tunnel />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
{"version":3,"sources":["components/Tunnel/Tunnel.js","App.js","reportWebVitals.js","index.js"],"names":["Tunnel","useState","x","xSet","contentProps","useSpring","opacity","marginTop","className","onClick","a","div","style","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8PAqBeA,EAjBA,WACb,MAAkBC,oBAAS,GAA3B,mBAAOC,EAAP,KAAUC,EAAV,KACMC,EAAeC,oBAAU,CAC7BC,QAASJ,EAAI,EAAI,EACjBK,UAAWL,EAAI,GAAK,MAEtB,OACE,sBAAKM,UAAU,SAAf,UACE,wBAAQC,QAAS,kBAAMN,GAAK,SAACO,GAAD,OAAQA,MAApC,oBACA,cAAC,WAAEC,IAAH,CAAOH,UAAU,MAAMI,MAAOR,EAA9B,SACE,6CAEF,sBAAMI,UAAU,eAAhB,SAAgCN,QCJvBW,MAVf,WACE,OACE,qBAAKL,UAAU,MAAf,SACE,8BACE,cAAC,EAAD,SCMOM,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.49e898b1.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport \"./Tunnel.css\";\nimport { useSpring, animated as a } from \"react-spring\";\n\nconst Tunnel = () => {\n  const [x, xSet] = useState(false);\n  const contentProps = useSpring({\n    opacity: x ? 1 : 0,\n    marginTop: x ? 0 : -500,\n  });\n  return (\n    <div className=\"tunnel\">\n      <button onClick={() => xSet((a) => !a)}> Click</button>\n      <a.div className=\"red\" style={contentProps}>\n        <h1>asdasdasd</h1>\n      </a.div>\n      <span className=\"tunnel__text\">{x}</span>\n    </div>\n  );\n};\n\nexport default Tunnel;\n","import \"./App.css\";\nimport Tunnel from \"./components/Tunnel/Tunnel\";\nfunction App() {\n  return (\n    <div className=\"App\">\n      <div>\n        <Tunnel />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
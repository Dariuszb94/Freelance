{"version":3,"sources":["assets/spotlight.svg","components/Tunnel/TunnelComponents/Spotlight.js","components/Tunnel/TunnelComponents/Underline.js","components/Tunnel/Tunnel.js","components/Component/Component.js","App.js","reportWebVitals.js","index.js"],"names":["Spotlight","width","height","viewBox","fill","xmlns","y","d","Underline","Tunnel","tunnel__outer","useRef","tunnel__inner","useState","offset","offsetSet","textFinishedSet","scrollOnScene","scrollOnSceneSet","contentPropsLT","useSpring","opacity","left","top","transform","scrollWidth","boxShadow","contentPropsRT","illuminateLeft","background","window","innerWidth","illuminateRight","useEffect","onScroll","e","offsetRaw","target","documentElement","scrollTop","current","offsetTop","innerHeight","clientHeight","scrollOnSceneRaw","addEventListener","removeEventListener","section","className","ref","div","style","options","delay","onInit","typewriter","typeString","pauseFor","deleteAll","callFunction","start","hr","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9b0c2683.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/spotlight.eea4d5b2.svg\";","function Spotlight() {\n  return (\n    <svg\n      width=\"48\"\n      height=\"41\"\n      viewBox=\"0 0 48 41\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <rect y=\"5\" width=\"41\" height=\"31\" fill=\"black\" />\n      <path d=\"M48 20.5V30.5V34.5V41L41 36V5L48 0V20.5Z\" fill=\"black\" />\n    </svg>\n  );\n}\n\nexport default Spotlight;\n","import { useSpring, animated as a, interpolate } from \"react-spring\";\n\nfunction Underline() {\n  const drawLine = useSpring({});\n  return (\n    // <svg\n    //   width=\"321\"\n    //   height=\"8\"\n    //   viewBox=\"0 0 321 8\"\n    //   fill=\"none\"\n    //   xmlns=\"http://www.w3.org/2000/svg\"\n    // >\n    //   <line y1=\"1.5\" x2=\"320\" y2=\"1.5\" stroke=\"black\" />\n    //   <line\n    //     x1=\"320.012\"\n    //     y1=\"1.02083\"\n    //     x2=\"53.9987\"\n    //     y2=\"3.99418\"\n    //     stroke=\"black\"\n    //   />\n    //   <line x1=\"264.006\" y1=\"4.3461\" x2=\"53.9975\" y2=\"3.80896\" stroke=\"black\" />\n    //   <line\n    //     x1=\"111.993\"\n    //     y1=\"6.65558\"\n    //     x2=\"264.139\"\n    //     y2=\"4.50005\"\n    //     stroke=\"black\"\n    //   />\n    // </svg>\n    <svg\n      width=\"329\"\n      height=\"16\"\n      viewBox=\"0 0 329 16\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <g filter=\"url(#filter0_d)\">\n        <line x1=\"4\" y1=\"5.5\" x2=\"324\" y2=\"5.5\" stroke=\"#8306B1\" />\n        <line\n          x1=\"324.012\"\n          y1=\"5.02083\"\n          x2=\"57.9987\"\n          y2=\"7.99418\"\n          stroke=\"#8306B1\"\n        />\n        <line\n          x1=\"268.006\"\n          y1=\"8.3461\"\n          x2=\"57.9975\"\n          y2=\"7.80896\"\n          stroke=\"#8306B1\"\n        />\n        <line\n          x1=\"115.993\"\n          y1=\"10.6556\"\n          x2=\"268.139\"\n          y2=\"8.50005\"\n          stroke=\"#8306B1\"\n        />\n      </g>\n      <defs>\n        <filter\n          id=\"filter0_d\"\n          x=\"0\"\n          y=\"0.520859\"\n          width=\"328.018\"\n          height=\"14.6347\"\n          filterUnits=\"userSpaceOnUse\"\n          color-interpolation-filters=\"sRGB\"\n        >\n          <feFlood flood-opacity=\"0\" result=\"BackgroundImageFix\" />\n          <feColorMatrix\n            in=\"SourceAlpha\"\n            type=\"matrix\"\n            values=\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0\"\n          />\n          <feOffset />\n          <feGaussianBlur stdDeviation=\"2\" />\n          <feColorMatrix\n            type=\"matrix\"\n            values=\"0 0 0 0 0.513726 0 0 0 0 0.0235294 0 0 0 0 0.694118 0 0 0 0.5 0\"\n          />\n          <feBlend\n            mode=\"normal\"\n            in2=\"BackgroundImageFix\"\n            result=\"effect1_dropShadow\"\n          />\n          <feBlend\n            mode=\"normal\"\n            in=\"SourceGraphic\"\n            in2=\"effect1_dropShadow\"\n            result=\"shape\"\n          />\n        </filter>\n      </defs>\n    </svg>\n  );\n}\n\nexport default Underline;\n","import React, { useState, useCallback, useEffect, useRef } from \"react\";\nimport \"./Tunnel.scss\";\nimport { useSpring, animated as a, interpolate } from \"react-spring\";\nimport Lamp from \"../../assets/spotlight.svg\";\nimport Spotlight from \"./TunnelComponents/Spotlight\";\nimport \"aos/dist/aos.css\";\nimport Typewriter from \"typewriter-effect\";\nimport Underline from \"./TunnelComponents/Underline\";\nconst Tunnel = () => {\n  const tunnel__outer = useRef(null);\n  const tunnel__inner = useRef(null);\n\n  const [offset, offsetSet] = useState(0);\n  const [textFinished, textFinishedSet] = useState(false);\n  const [scrollOnScene, scrollOnSceneSet] = useState(0);\n  const contentPropsLT = useSpring({\n    opacity: offset,\n    left: `${50 - 50 * offset}%`,\n    top: `${50 - 50 * offset}%`,\n    transform: `translate(${-50 + 50 * offset}%, ${\n      -50 + 50 * offset\n    }%) rotate(${offset * 45}deg)`,\n  });\n\n  const scrollWidth = useSpring({\n    width: `${scrollOnScene > 0 ? scrollOnScene * 100 : 0}%`,\n    opacity: `${scrollOnScene <= 0 ? 0 : 1}`,\n    boxShadow: `0px 0px 8px ${8 * scrollOnScene}px #8306b1`,\n  });\n  const contentPropsRT = useSpring({\n    opacity: offset,\n    left: `${50 + 50 * offset}%`,\n    top: `${50 - 50 * offset}%`,\n    transform: `translate(${-100 * offset}%, ${-50 + 50 * offset}%) rotate(${\n      offset * -45\n    }deg)`,\n  });\n  const illuminateLeft = useSpring({\n    background: `linear-gradient(\n      to right,\n      #8306b1 -89%,\n      rgba(255, 255, 255, 0) ${\n        window.innerWidth < 500 ? scrollOnScene * 70 : scrollOnScene * 100\n      }%\n    )`,\n  });\n  const illuminateRight = useSpring({\n    background: `linear-gradient(\n      to left,\n      #8306b1 -89%,\n      rgba(255, 255, 255, 0) ${\n        window.innerWidth < 500 ? scrollOnScene * 70 : scrollOnScene * 100\n      }%\n    )`,\n  });\n  useEffect(() => {\n    const onScroll = (e) => {\n      const offsetRaw =\n        (e.target.documentElement.scrollTop -\n          tunnel__outer.current.offsetTop +\n          window.innerHeight) /\n        tunnel__inner.current.clientHeight;\n      const scrollOnSceneRaw =\n        (e.target.documentElement.scrollTop - tunnel__outer.current.offsetTop) /\n        (tunnel__outer.current.clientHeight -\n          tunnel__inner.current.clientHeight -\n          80);\n      if (scrollOnSceneRaw > 0 && scrollOnSceneRaw <= 1) {\n        scrollOnSceneSet(scrollOnSceneRaw);\n      } else if (scrollOnSceneRaw > 1) {\n        scrollOnSceneSet(1);\n      } else {\n        scrollOnSceneSet(0);\n      }\n      // console.log(\n      //   e.target.documentElement.scrollTop - tunnel__outer.current.offsetTop\n      // );\n      // console.log(tunnel__outer.current.offsetTop);\n      // console.log(tunnel__outer.current.clientHeight);\n\n      if (offsetRaw < 0) {\n        offsetSet(0);\n        textFinishedSet(false);\n      }\n\n      if (offsetRaw > 0 && offsetRaw <= 1) {\n        offsetSet(offsetRaw);\n        textFinishedSet(false);\n      }\n\n      if (offsetRaw > 1) offsetSet(1);\n    };\n    window.addEventListener(\"scroll\", onScroll);\n\n    return () => window.removeEventListener(\"scroll\", onScroll);\n  }, [offset]);\n\n  return (\n    <a.section className=\"tunnel\" ref={tunnel__outer}>\n      <div className=\"tunnel__sticky\">\n        <div className=\"tunnel__sticky-inner\" ref={tunnel__inner}>\n          <a.div style={contentPropsLT} className=\"tunnel__box__lt\">\n            <div className=\"spotlight__inner\">\n              <Spotlight />\n              <div className=\"spotlight__inner__light\">\n                <a.div\n                  className=\"spotlight__inner__light__bg\"\n                  style={illuminateLeft}\n                ></a.div>\n              </div>\n            </div>\n          </a.div>\n          <a.div style={contentPropsRT} className=\"tunnel__box__rt\">\n            <div className=\"spotlight__inner\">\n              <Spotlight />\n              <div className=\"spotlight__inner__light\">\n                <a.div\n                  className=\"spotlight__inner__light__bg\"\n                  style={illuminateRight}\n                ></a.div>\n              </div>\n            </div>\n          </a.div>\n          <a.div className=\"scene__text\">\n            {offset >= 1 ? (\n              <Typewriter\n                options={{\n                  delay: 28,\n                }}\n                onInit={(typewriter) => {\n                  typewriter\n                    .typeString(\"Hi!\")\n\n                    .pauseFor(100)\n                    .deleteAll()\n                    .typeString(\"I will gladly make website for you!\")\n                    .callFunction(() => {\n                      textFinishedSet(true);\n                    })\n                    .start();\n                }}\n              />\n            ) : null}\n\n            {/* <Underline /> */}\n            <a.hr style={scrollWidth} className=\"scene__text__underline\" />\n          </a.div>\n        </div>\n\n        {/* <a.div style={contentPropsLB} className=\"tunnel__box__lb\"></a.div>\n        <a.div style={contentPropsRB} className=\"tunnel__box__rb\"></a.div> */}\n      </div>\n    </a.section>\n  );\n};\n\nexport default Tunnel;\n","import React, { useState, useCallback, useEffect } from \"react\";\nimport \"./Component.css\";\nimport { useSpring, animated, interpolate } from \"react-spring\";\nimport \"aos/dist/aos.css\";\nconst Component = () => {\n  return <animated.section className=\"component\"></animated.section>;\n};\n\nexport default Component;\n","import \"./App.css\";\nimport Tunnel from \"./components/Tunnel/Tunnel\";\nimport Component from \"./components/Component/Component\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Component />\n\n      <Tunnel />\n      <Component />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
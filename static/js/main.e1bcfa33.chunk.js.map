{"version":3,"sources":["components/Tunnel/TunnelComponents/Spotlight.js","components/Tunnel/Tunnel.js","components/Tunnel/TunnelComponents/Texts.js","components/Tunnel/TunnelComponents/RWD.js","components/Tunnel/TunnelComponents/Crown.js","components/Tunnel/TunnelComponents/Thunder.js","assets/spotlight.svg","components/Tunnel/TunnelComponents/Underline.js","components/Component/Component.js","components/Cards/Cards.js","App.js","reportWebVitals.js","index.js"],"names":["Spotlight","width","height","viewBox","fill","xmlns","y","d","Tunnel","tunnel__outer","useRef","tunnel__inner","useState","setToggle","offset","offsetSet","textFinishedSet","scrollOnScene","scrollOnSceneSet","contentPropsLT","useSpring","opacity","left","top","transform","scrollWidth","boxShadow","contentPropsRT","illuminateLeft","background","window","innerWidth","illuminateRight","useEffect","setImmediate","onScroll","e","offsetRaw","target","documentElement","scrollTop","current","offsetTop","innerHeight","clientHeight","scrollOnSceneRaw","addEventListener","removeEventListener","section","className","ref","div","style","options","delay","onInit","typewriter","deleteAll","typeString","callFunction","start","hr","First","Top","Quality","Third","Trail","open","children","items","React","Children","toArray","trail","useTrail","length","config","mass","tension","friction","x","from","map","index","rest","interpolate","range","output","key","SqueezeSpring","stateRaw","toggle","useDebounce","state","to","precision","reset","onStart","onMouseEnter","onMouseLeave","Texts","props","shadow","color","textShadow","word","useAnimatedPath","setLength","strokeDashoffset","strokeDasharray","getTotalLength","ShieldPart","animationStrokeProps","path","stroke","strokeWidth","Image","Crown","Thunder","Component","cards","i","scale","rot","Math","random","trans","r","s","Deck","Set","gone","useSprings","set","bind","useGesture","args","down","xDelta","delta","xDir","distance","direction","velocity","console","log","dir","add","isGone","has","undefined","size","setTimeout","clear","backgroundImage","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e1bcfa33.chunk.js","sourcesContent":["function Spotlight() {\n  return (\n    <svg\n      width=\"48\"\n      height=\"41\"\n      viewBox=\"0 0 48 41\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <rect y=\"5\" width=\"41\" height=\"31\" fill=\"black\" />\n      <path d=\"M48 20.5V30.5V34.5V41L41 36V5L48 0V20.5Z\" fill=\"black\" />\n    </svg>\n  );\n}\n\nexport default Spotlight;\n","import React, {\n  useState,\n  useCallback,\n  useMemo,\n  useEffect,\n  useRef,\n  Fragment,\n} from \"react\";\nimport \"./Tunnel.scss\";\nimport {\n  useSpring,\n  animated as a,\n  interpolate,\n  config,\n  useTrail,\n} from \"react-spring\";\nimport Lamp from \"../../assets/spotlight.svg\";\nimport Spotlight from \"./TunnelComponents/Spotlight\";\nimport \"aos/dist/aos.css\";\nimport Typewriter from \"typewriter-effect\";\nimport Underline from \"./TunnelComponents/Underline\";\nimport Texts from \"./TunnelComponents/Texts\";\nimport { useDebounce } from \"use-debounce\";\nconst Tunnel = () => {\n  const tunnel__outer = useRef(null);\n  const tunnel__inner = useRef(null);\n  const [toggle, setToggle] = useState(false);\n  const [offset, offsetSet] = useState(0);\n  const [textFinished, textFinishedSet] = useState(false);\n  const [scrollOnScene, scrollOnSceneSet] = useState(0);\n  const contentPropsLT = useSpring({\n    opacity: offset,\n    left: `${50 - 50 * offset}%`,\n    top: `${50 - 50 * offset}%`,\n    transform: `translate(${-50 + 50 * offset}%, ${\n      -50 + 50 * offset\n    }%) rotate(${offset * 45}deg)`,\n  });\n\n  const scrollWidth = useSpring({\n    width: `${scrollOnScene > 0 ? scrollOnScene * 100 : 0}%`,\n    opacity: `${scrollOnScene <= 0 ? 0 : 1}`,\n    boxShadow: `0px 0px 8px ${8 * scrollOnScene}px #8306b1`,\n  });\n  const contentPropsRT = useSpring({\n    opacity: offset,\n    left: `${50 + 50 * offset}%`,\n    top: `${50 - 50 * offset}%`,\n    transform: `translate(${-100 * offset}%, ${-50 + 50 * offset}%) rotate(${\n      offset * -45\n    }deg)`,\n  });\n  const illuminateLeft = useSpring({\n    background: `linear-gradient(\n      to right,\n      #8306b1 -89%,\n      rgba(255, 255, 255, 0) ${\n        window.innerWidth < 500 ? scrollOnScene * 70 : scrollOnScene * 100\n      }%\n    )`,\n  });\n  const illuminateRight = useSpring({\n    background: `linear-gradient(\n      to left,\n      #8306b1 -89%,\n      rgba(255, 255, 255, 0) ${\n        window.innerWidth < 500 ? scrollOnScene * 70 : scrollOnScene * 100\n      }%\n    )`,\n  });\n\n  useEffect(() => {\n    setImmediate(() => {\n      setToggle(true);\n    });\n  }, []);\n  useEffect(() => {\n    const onScroll = (e) => {\n      const offsetRaw =\n        (e.target.documentElement.scrollTop -\n          tunnel__outer.current.offsetTop +\n          window.innerHeight) /\n        tunnel__inner.current.clientHeight;\n      const scrollOnSceneRaw =\n        (e.target.documentElement.scrollTop - tunnel__outer.current.offsetTop) /\n        (tunnel__outer.current.clientHeight -\n          tunnel__inner.current.clientHeight -\n          80);\n\n      if (scrollOnSceneRaw > 0 && scrollOnSceneRaw <= 1) {\n        scrollOnSceneSet(scrollOnSceneRaw);\n      } else if (scrollOnSceneRaw > 1) {\n        scrollOnSceneSet(1);\n      } else {\n        scrollOnSceneSet(0);\n      }\n      if (offsetRaw < 0) {\n        offsetSet(0);\n        textFinishedSet(false);\n      }\n\n      if (offsetRaw > 0 && offsetRaw <= 1) {\n        offsetSet(offsetRaw);\n        textFinishedSet(false);\n      }\n\n      if (offsetRaw > 1) offsetSet(1);\n    };\n    window.addEventListener(\"scroll\", onScroll);\n\n    return () => window.removeEventListener(\"scroll\", onScroll);\n  }, [offset]);\n\n  return (\n    <a.section className=\"tunnel\" ref={tunnel__outer}>\n      <div className=\"tunnel__sticky\">\n        <div className=\"tunnel__sticky-inner\" ref={tunnel__inner}>\n          <a.div style={contentPropsLT} className=\"tunnel__box__lt\">\n            <div className=\"spotlight__inner\">\n              <Spotlight />\n              <div className=\"spotlight__inner__light\">\n                <a.div\n                  className=\"spotlight__inner__light__bg\"\n                  style={illuminateLeft}\n                ></a.div>\n              </div>\n            </div>\n          </a.div>\n          <a.div style={contentPropsRT} className=\"tunnel__box__rt\">\n            <div className=\"spotlight__inner\">\n              <Spotlight />\n              <div className=\"spotlight__inner__light\">\n                <a.div\n                  className=\"spotlight__inner__light__bg\"\n                  style={illuminateRight}\n                ></a.div>\n              </div>\n            </div>\n          </a.div>\n          <Texts scrollOnScene={scrollOnScene} />\n          <a.div className=\"scene__text\">\n            {offset >= 1 ? (\n              <Typewriter\n                options={{\n                  delay: 28,\n                }}\n                onInit={(typewriter) => {\n                  typewriter\n                    .deleteAll()\n                    .typeString(\"Please keep scrolling!\")\n                    .callFunction(() => {\n                      textFinishedSet(true);\n                    })\n                    .start();\n                }}\n              />\n            ) : null}\n            <a.hr style={scrollWidth} className=\"scene__text__underline\" />\n          </a.div>\n        </div>\n      </div>\n    </a.section>\n  );\n};\n\nexport default Tunnel;\n","import React, {\n  useState,\n  useCallback,\n  useMemo,\n  useEffect,\n  useRef,\n  Fragment,\n} from \"react\";\nimport \"../Tunnel.scss\";\nimport {\n  useSpring,\n  animated as a,\n  interpolate,\n  config,\n  useTrail,\n} from \"react-spring\";\nimport { useDebounce } from \"use-debounce\";\nimport RWD from \"./RWD\";\nimport Crown from \"./Crown\";\nimport Thunder from \"./Thunder\";\n\nconst First = [\"F\", \"a\", \"s\", \"t\"];\nconst Top = [\"T\", \"o\", \"p\"];\nconst Quality = [\"Q\", \"u\", \"a\", \"l\", \"i\", \"t\", \"y\"];\nconst Third = [\"R\", \"W\", \"D\"];\n\nfunction Trail({ open, children, ...props }) {\n  const items = React.Children.toArray(children);\n  const trail = useTrail(items.length, {\n    config: { mass: 5, tension: 2000, friction: 135 },\n    opacity: 1,\n    x: 1,\n    y: 1,\n\n    from: {\n      opacity: 0,\n      x: 0,\n      y: 0,\n    },\n  });\n  return (\n    <>\n      {trail.map(({ x, y, ...rest }, index) => (\n        <a.div\n          key={items[index].key}\n          className=\"trails-text\"\n          style={{\n            ...rest,\n            transform: interpolate(\n              [\n                x.interpolate({\n                  range: [0, 0.9, 1],\n                  output: [0, 1.2, 1],\n                }),\n                y.interpolate({\n                  range: [0, 0.9, 1],\n                  output: [0, 0.8, 1],\n                }),\n              ],\n              (x, y) => `scale(${x},${y})`\n            ),\n\n            // r.interpolate((r) => `rotate(${r}deg)`)\n          }}\n        >\n          {items[index]}\n        </a.div>\n      ))}\n    </>\n  );\n}\nconst SqueezeSpring = ({ children }) => {\n  const [stateRaw, toggle] = useState(false);\n\n  const [state] = useDebounce(stateRaw, 40);\n  const { x, y } = useSpring({\n    from: { x: !state ? 1 : 0, y: !state ? 1 : 0 },\n    to: { x: 1, y: 1 },\n    config: { mass: 0.5, tension: 120, friction: 2, precision: 0.001 },\n    reset: state,\n    onStart: (state) => toggle(false),\n  });\n\n  return (\n    <a.div\n      onMouseEnter={() => toggle(true)}\n      onMouseLeave={() => toggle(false)}\n      style={{\n        transform: interpolate(\n          [\n            x.interpolate({\n              range: [0, 0.3, 1],\n              output: [1, 1.3, 1],\n            }),\n            y.interpolate({\n              range: [0, 0.3, 1],\n              output: [1, 0.7, 1],\n            }),\n          ],\n          (x, y) => `scale(${x},${y})`\n        ),\n      }}\n    >\n      {children}\n    </a.div>\n  );\n};\n\nconst Texts = ({ ...props }) => {\n  const ResponsiveOpacity = useSpring({\n    opacity: props.scrollOnScene > 0.8 ? 1 : 0,\n    color: \"red\",\n  });\n\n  const shadow = useSpring({\n    textShadow: `0px 0px ${\n      props.scrollOnScene >= 0.6 ? 50 * (props.scrollOnScene - 0.6) : 0\n    }px #fff`,\n  });\n  return (\n    <div className=\"slogans\">\n      <a.div className=\"slogan\" style={shadow}>\n        {props.scrollOnScene > 0 ? (\n          <Fragment>\n            <Trail key=\"trail-1\">\n              {First.map((word, index) => (\n                <SqueezeSpring key={word} className=\"letter\">\n                  {word}\n                </SqueezeSpring>\n              ))}\n            </Trail>\n            <Thunder />\n          </Fragment>\n        ) : null}\n      </a.div>\n      <a.div className=\"slogan\" style={shadow}>\n        {props.scrollOnScene > 0.3 ? (\n          <Fragment>\n            <Trail key=\"trail-2\">\n              {Top.map((word, index) => (\n                <SqueezeSpring key={index} className=\"letter\">\n                  {word}\n                </SqueezeSpring>\n              ))}\n              &nbsp;&nbsp;\n              {Quality.map((word, index) => (\n                <SqueezeSpring key={index}>{word}</SqueezeSpring>\n              ))}\n            </Trail>\n            <Crown />\n          </Fragment>\n        ) : null}\n      </a.div>\n      <a.div className=\"slogan\" style={shadow}>\n        {props.scrollOnScene > 0.6 ? (\n          <Fragment>\n            <Trail key=\"trail-3\">\n              {Third.map((word, index) => (\n                <SqueezeSpring key={index} className=\"letter\">\n                  {word}\n                </SqueezeSpring>\n              ))}\n            </Trail>\n            <RWD />\n          </Fragment>\n        ) : null}\n      </a.div>\n    </div>\n  );\n};\n\nexport default Texts;\n","import { useSpring, animated } from \"react-spring\";\nimport { useState, useEffect } from \"react\";\n\nfunction useAnimatedPath({ toggle, delay }) {\n  const [length, setLength] = useState(null);\n  const animatedStyle = useSpring({\n    strokeDashoffset: toggle ? 0 : length,\n    strokeDasharray: length,\n    delay: 400,\n    config: { friction: 80 },\n  });\n\n  return {\n    style: animatedStyle,\n    ref: (ref) => {\n      // The ref is `null` on component unmount\n      if (ref) {\n        setLength(ref.getTotalLength());\n      }\n    },\n  };\n}\n\nfunction Checkmark({ toggle }) {\n  const animationProps = useAnimatedPath({\n    toggle,\n    delay: 500,\n  });\n\n  return (\n    <animated.path {...animationProps} stroke=\"#4ADE80\" strokeWidth=\"24\" />\n  );\n}\n\nfunction ShieldPart({ color, d, toggle }) {\n  const animationStrokeProps = useAnimatedPath({ toggle });\n\n  return (\n    <animated.path\n      {...animationStrokeProps}\n      // as the `animationStrokeProps` have a `style` property\n      // on it, it would be overriden by just passing\n      // `style={animationFillStyle}`\n\n      stroke={color}\n      strokeWidth=\"4\"\n      d={d}\n    />\n  );\n}\n\nexport default function Image() {\n  const [toggle, setToggle] = useState(false);\n\n  useEffect(() => {\n    // `setImmediate` is roughly equal to `setTimeout(() => { ... }, 0)\n    // Using `setToggle` without `setImmediate` breaks the animation\n    // as we first need to allow for the measurement of the `path`\n    // lengths using `.getTotalLength()`\n    setImmediate(() => {\n      setToggle(true);\n    });\n  }, []);\n\n  return (\n    <div className=\"icon-container\">\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=\"36\"\n        height=\"120\"\n        fill=\"none\"\n        viewBox=\"0 0 70 120\"\n      >\n        {/* Left shield part */}\n\n        <ShieldPart\n          toggle={toggle}\n          d=\"M1 6C1 3.23858 3.23858 1 6 1H64C66.7614 1 69 3.23858 69 6V105C69 107.761 66.7614 110 64 110H6C3.23858 110 1 107.761 1 105V6ZM35 106C38.3137 106 41 103.314 41 100C41 96.6863 38.3137 94 35 94C31.6863 94 29 96.6863 29 100C29 103.314 31.6863 106 35 106Z\"\n          color=\" #8306b1 \"\n          stroke=\"black\"\n        />\n        {/* Right shield part */}\n      </svg>\n    </div>\n  );\n}\n","import { useSpring, animated } from \"react-spring\";\nimport { useState, useEffect } from \"react\";\n\nfunction useAnimatedPath({ toggle, delay }) {\n  const [length, setLength] = useState(null);\n  const animatedStyle = useSpring({\n    strokeDashoffset: toggle ? 0 : length,\n    strokeDasharray: length,\n    delay: 400,\n    config: { friction: 80 },\n  });\n\n  return {\n    style: animatedStyle,\n    ref: (ref) => {\n      // The ref is `null` on component unmount\n      if (ref) {\n        setLength(ref.getTotalLength());\n      }\n    },\n  };\n}\n\nfunction Checkmark({ toggle }) {\n  const animationProps = useAnimatedPath({\n    toggle,\n    delay: 500,\n  });\n\n  return (\n    <animated.path {...animationProps} stroke=\"#4ADE80\" strokeWidth=\"24\" />\n  );\n}\n\nfunction ShieldPart({ color, d, toggle }) {\n  const animationStrokeProps = useAnimatedPath({ toggle });\n\n  return (\n    <animated.path\n      {...animationStrokeProps}\n      // as the `animationStrokeProps` have a `style` property\n      // on it, it would be overriden by just passing\n      // `style={animationFillStyle}`\n\n      stroke={color}\n      strokeWidth=\"4\"\n      d={d}\n    />\n  );\n}\n\nexport default function Crown() {\n  const [toggle, setToggle] = useState(false);\n\n  useEffect(() => {\n    // `setImmediate` is roughly equal to `setTimeout(() => { ... }, 0)\n    // Using `setToggle` without `setImmediate` breaks the animation\n    // as we first need to allow for the measurement of the `path`\n    // lengths using `.getTotalLength()`\n    setImmediate(() => {\n      setToggle(true);\n    });\n  }, []);\n\n  return (\n    <div className=\"icon-container\">\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=\"60\"\n        height=\"84\"\n        fill=\"none\"\n        viewBox=\"0 0 88 84\"\n      >\n        {/* Left shield part */}\n\n        <ShieldPart\n          toggle={toggle}\n          d=\"M44.951 2.16312L53.8256 29.4762C54.2272 30.7123 55.3791 31.5492 56.6788 31.5492H85.3975C86.3662 31.5492 86.769 32.7888 85.9852 33.3582L62.7513 50.2386C61.6999 51.0025 61.2599 52.3566 61.6615 53.5927L70.5361 80.9058C70.8354 81.8271 69.781 82.5932 68.9972 82.0238L45.7633 65.1434C44.7119 64.3795 43.2881 64.3795 42.2366 65.1434L19.0027 82.0238C18.219 82.5932 17.1645 81.8271 17.4639 80.9058L26.3385 53.5927C26.7401 52.3566 26.3001 51.0025 25.2486 50.2386L2.01474 33.3582C1.23103 32.7888 1.6338 31.5492 2.60253 31.5492H31.3212C32.6209 31.5492 33.7728 30.7123 34.1744 29.4762L43.0489 2.16312C43.3483 1.24181 44.6517 1.24181 44.951 2.16312Z\"\n          color=\"#8306b1\"\n          stroke=\"black\"\n        />\n        {/* Right shield part */}\n      </svg>\n    </div>\n  );\n}\n","import { useSpring, animated } from \"react-spring\";\nimport { useState, useEffect } from \"react\";\n\nfunction useAnimatedPath({ toggle, delay }) {\n  const [length, setLength] = useState(null);\n  const animatedStyle = useSpring({\n    strokeDashoffset: toggle ? 0 : length,\n    strokeDasharray: length,\n    delay: 400,\n    config: { friction: 80 },\n  });\n\n  return {\n    style: animatedStyle,\n    ref: (ref) => {\n      // The ref is `null` on component unmount\n      if (ref) {\n        setLength(ref.getTotalLength());\n      }\n    },\n  };\n}\n\nfunction Checkmark({ toggle }) {\n  const animationProps = useAnimatedPath({\n    toggle,\n    delay: 500,\n  });\n\n  return (\n    <animated.path {...animationProps} stroke=\"#4ADE80\" strokeWidth=\"24\" />\n  );\n}\n\nfunction ShieldPart({ color, d, toggle }) {\n  const animationStrokeProps = useAnimatedPath({ toggle });\n\n  return (\n    <animated.path\n      {...animationStrokeProps}\n      // as the `animationStrokeProps` have a `style` property\n      // on it, it would be overriden by just passing\n      // `style={animationFillStyle}`\n\n      stroke={color}\n      strokeWidth=\"4\"\n      d={d}\n    />\n  );\n}\n\nexport default function Thunder() {\n  const [toggle, setToggle] = useState(false);\n\n  useEffect(() => {\n    // `setImmediate` is roughly equal to `setTimeout(() => { ... }, 0)\n    // Using `setToggle` without `setImmediate` breaks the animation\n    // as we first need to allow for the measurement of the `path`\n    // lengths using `.getTotalLength()`\n    setImmediate(() => {\n      setToggle(true);\n    });\n  }, []);\n\n  return (\n    <div className=\"icon-container\">\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=\"60\"\n        height=\"114\"\n        fill=\"none\"\n        viewBox=\"0 0 105 114\"\n      >\n        {/* Left shield part */}\n\n        <ShieldPart\n          toggle={toggle}\n          d=\"M69.2128 1.49428L103.7 0.536306L62.6575 39.1358L61.7385 40H63H87.0746L40.6877 77.1096L39.5746 78H41H62.5782L2.37955 111.599L26.872 84.3341L27.6213 83.5H26.5H11.7071L48.3536 46.8536L49.1815 46.0256L48.0109 46.0001L26.1492 45.5249L49.3572 21.3499L49.3607 21.3463L69.2128 1.49428Z\"\n          color=\"#8306b1\"\n          stroke=\"black\"\n        />\n        {/* Right shield part */}\n      </svg>\n    </div>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/spotlight.eea4d5b2.svg\";","import { useSpring, animated as a, interpolate } from \"react-spring\";\n\nfunction Underline() {\n  const drawLine = useSpring({});\n  return (\n    // <svg\n    //   width=\"321\"\n    //   height=\"8\"\n    //   viewBox=\"0 0 321 8\"\n    //   fill=\"none\"\n    //   xmlns=\"http://www.w3.org/2000/svg\"\n    // >\n    //   <line y1=\"1.5\" x2=\"320\" y2=\"1.5\" stroke=\"black\" />\n    //   <line\n    //     x1=\"320.012\"\n    //     y1=\"1.02083\"\n    //     x2=\"53.9987\"\n    //     y2=\"3.99418\"\n    //     stroke=\"black\"\n    //   />\n    //   <line x1=\"264.006\" y1=\"4.3461\" x2=\"53.9975\" y2=\"3.80896\" stroke=\"black\" />\n    //   <line\n    //     x1=\"111.993\"\n    //     y1=\"6.65558\"\n    //     x2=\"264.139\"\n    //     y2=\"4.50005\"\n    //     stroke=\"black\"\n    //   />\n    // </svg>\n    <svg\n      width=\"329\"\n      height=\"16\"\n      viewBox=\"0 0 329 16\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <g filter=\"url(#filter0_d)\">\n        <line x1=\"4\" y1=\"5.5\" x2=\"324\" y2=\"5.5\" stroke=\"#8306B1\" />\n        <line\n          x1=\"324.012\"\n          y1=\"5.02083\"\n          x2=\"57.9987\"\n          y2=\"7.99418\"\n          stroke=\"#8306B1\"\n        />\n        <line\n          x1=\"268.006\"\n          y1=\"8.3461\"\n          x2=\"57.9975\"\n          y2=\"7.80896\"\n          stroke=\"#8306B1\"\n        />\n        <line\n          x1=\"115.993\"\n          y1=\"10.6556\"\n          x2=\"268.139\"\n          y2=\"8.50005\"\n          stroke=\"#8306B1\"\n        />\n      </g>\n      <defs>\n        <filter\n          id=\"filter0_d\"\n          x=\"0\"\n          y=\"0.520859\"\n          width=\"328.018\"\n          height=\"14.6347\"\n          filterUnits=\"userSpaceOnUse\"\n          color-interpolation-filters=\"sRGB\"\n        >\n          <feFlood flood-opacity=\"0\" result=\"BackgroundImageFix\" />\n          <feColorMatrix\n            in=\"SourceAlpha\"\n            type=\"matrix\"\n            values=\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0\"\n          />\n          <feOffset />\n          <feGaussianBlur stdDeviation=\"2\" />\n          <feColorMatrix\n            type=\"matrix\"\n            values=\"0 0 0 0 0.513726 0 0 0 0 0.0235294 0 0 0 0 0.694118 0 0 0 0.5 0\"\n          />\n          <feBlend\n            mode=\"normal\"\n            in2=\"BackgroundImageFix\"\n            result=\"effect1_dropShadow\"\n          />\n          <feBlend\n            mode=\"normal\"\n            in=\"SourceGraphic\"\n            in2=\"effect1_dropShadow\"\n            result=\"shape\"\n          />\n        </filter>\n      </defs>\n    </svg>\n  );\n}\n\nexport default Underline;\n","import React, { useState, useCallback, useEffect } from \"react\";\nimport \"./Component.css\";\nimport { useSpring, animated, interpolate } from \"react-spring\";\nimport \"aos/dist/aos.css\";\nconst Component = () => {\n  return <animated.section className=\"component\"></animated.section>;\n};\n\nexport default Component;\n","import React, { useState } from \"react\";\nimport { useSprings, animated, interpolate } from \"react-spring\";\nimport { useGesture } from \"react-use-gesture\";\nimport \"./Cards.scss\";\n\nconst cards = [\n  \"https://upload.wikimedia.org/wikipedia/en/f/f5/RWS_Tarot_08_Strength.jpg\",\n  \"https://upload.wikimedia.org/wikipedia/en/5/53/RWS_Tarot_16_Tower.jpg\",\n  \"https://upload.wikimedia.org/wikipedia/en/9/9b/RWS_Tarot_07_Chariot.jpg\",\n  \"https://upload.wikimedia.org/wikipedia/en/d/db/RWS_Tarot_06_Lovers.jpg\",\n  \"https://upload.wikimedia.org/wikipedia/en/thumb/8/88/RWS_Tarot_02_High_Priestess.jpg/690px-RWS_Tarot_02_High_Priestess.jpg\",\n  \"https://upload.wikimedia.org/wikipedia/en/d/de/RWS_Tarot_01_Magician.jpg\",\n];\n\n// These two are just helpers, they curate spring data, values that are later being interpolated into css\nconst to = (i) => ({\n  x: 0,\n  y: i * -4,\n  scale: 1,\n  rot: -10 + Math.random() * 20,\n  delay: i * 100,\n});\nconst from = (i) => ({ x: 0, rot: 0, scale: 1.5, y: -1000 });\n// This is being used down there in the view, it interpolates rotation and scale into a css transform\nconst trans = (r, s) =>\n  `perspective(1500px) rotateX(30deg) rotateY(${\n    r / 10\n  }deg) rotateZ(${r}deg) scale(${s})`;\n\nexport default function Deck() {\n  const [gone] = useState(() => new Set()); // The set flags all the cards that are flicked out\n  const [props, set] = useSprings(cards.length, (i) => ({\n    ...to(i),\n    from: from(i),\n  })); // Create a bunch of springs using the helpers above\n  // Create a gesture, we're interested in down-state, delta (current-pos - click-pos), direction and velocity\n  const bind = useGesture(\n    ({\n      args: [index],\n      down,\n      delta: [xDelta],\n      distance,\n      direction: [xDir],\n      velocity,\n    }) => {\n      console.log(\"ASdas\");\n      const trigger = velocity > 0.2; // If you flick hard enough it should trigger the card to fly out\n      const dir = xDir < 0 ? -1 : 1; // Direction should either point left or right\n      if (!down && trigger) gone.add(index); // If button/finger's up and trigger velocity is reached, we flag the card ready to fly out\n      set((i) => {\n        if (index !== i) return; // We're only interested in changing spring-data for the current spring\n        const isGone = gone.has(index);\n        const x = isGone ? (200 + window.innerWidth) * dir : down ? xDelta : 0; // When a card is gone it flys out left or right, otherwise goes back to zero\n        const rot = xDelta / 100 + (isGone ? dir * 10 * velocity : 0); // How much the card tilts, flicking it harder makes it rotate faster\n        const scale = down ? 1.1 : 1; // Active cards lift up a bit\n        return {\n          x,\n          rot,\n          scale,\n          delay: undefined,\n          config: { friction: 50, tension: down ? 800 : isGone ? 200 : 500 },\n        };\n      });\n      if (!down && gone.size === cards.length)\n        setTimeout(() => gone.clear() || set((i) => to(i)), 600);\n    }\n  );\n  // Now we're just mapping the animated values to our view, that's it. Btw, this component only renders once. :-)\n  return props.map(({ x, y, rot, scale }, i) => (\n    <animated.div\n      key={i}\n      style={{\n        transform: interpolate(\n          [x, y],\n          (x, y) => `translate3d(${x}px,${y}px,0)`\n        ),\n      }}\n    >\n      {/* This is the card itself, we're binding our gesture to it (and inject its index so we know which is which) */}\n      <animated.div\n        {...bind(i)}\n        style={{\n          transform: interpolate([rot, scale], trans),\n          backgroundImage: `url(${cards[i]})`,\n        }}\n      />\n    </animated.div>\n  ));\n}\n","import \"./App.css\";\nimport Tunnel from \"./components/Tunnel/Tunnel\";\nimport Component from \"./components/Component/Component\";\nimport Deck from \"./components/Cards/Cards\";\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Component />\n\n      <Tunnel />\n      <section className=\"cards-container\">\n        <div className=\"cards\">\n          <Deck />\n        </div>\n      </section>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}